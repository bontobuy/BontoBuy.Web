@model BontoBuy.Web.Models.RegisterSupplierViewModel
@{
    Layout = null;
    ViewBag.Title = "Register Supplier";
    @Styles.Render("~/Content/SupplierCSS");
    @Scripts.Render("~/bundles/modernizr");
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width"/>
    <title>@ViewBag.Title</title>
    <style type="text/css">
        #supplierLogin {
            margin-top: 10px;
        }

        .jumbotron {
            background-color: #d5d1d1;
            border-radius: 10px;
            margin-top: 5px;
            height: 20%;
        }

        .popover.primary {
            border-color: #337ab7;
        }

            .popover.primary > .arrow {
                border-top-color: #337ab7;
            }

            .popover.primary > .popover-title {
                color: #fff;
                background-color: #337ab7;
                border-color: #337ab7;
            }

        .popover.success {
            border-color: #d6e9c6;
        }

            .popover.success > .arrow {
                border-top-color: #d6e9c6;
            }

            .popover.success > .popover-title {
                color: #3c763d;
                background-color: #dff0d8;
                border-color: #d6e9c6;
            }

        .popover.info {
            border-color: #bce8f1;
        }

            .popover.info > .arrow {
                border-top-color: #bce8f1;
            }

            .popover.info > .popover-title {
                color: #31708f;
                background-color: #d9edf7;
                border-color: #bce8f1;
            }

        .popover.warning {
            border-color: #faebcc;
        }

            .popover.warning > .arrow {
                border-top-color: #faebcc;
            }

            .popover.warning > .popover-title {
                color: #8a6d3b;
                background-color: #fcf8e3;
                border-color: #faebcc;
            }

        .popover.danger {
            border-color: #ebccd1;
        }

            .popover.danger > .arrow {
                border-top-color: #ebccd1;
            }

            .popover.danger > .popover-title {
                color: #a94442;
                background-color: #f2dede;
                border-color: #ebccd1;
            }
    </style>

    <script type="text/javascript">
        $(document).ready(function () {

            var required = "Minimum 6 characters and must contain at least one upper case letter, one lower case letter and (one number AND one special char).";

            //Must contain at least one upper case letter, one lower case letter and (one number AND one special char).
            var best = /^(?=\S*?[A-Z])(?=\S*?[a-z])(?=\S*?[0-9])(?=\S*?[^\w\*])\S{6,}$/;

            $('#password').on('keyup', function () {
                var password = $(this);
                var pass = password.val();
                var passLabel = $('[for="password"]');
                var strength = 'Weak';
                var pclass = 'danger';
                if (best.test(pass) == true) {
                    strength = 'Very Strong';
                    pclass = 'success';
                } else {
                    strength = required;
                    pclass = 'warning';
                }

                var popover = password.attr('data-content', strength).data('bs.popover');
                popover.setContent();
                popover.$tip.addClass(popover.options.placement).removeClass('danger success info warning primary').addClass(pclass);

            });

            $('input[data-toggle="popover"]').popover({
                placement: 'top',
                trigger: 'focus'
            });

            $('#PhoneNumber').keyup(function () {
                var phoneNumber = $(this);
                var pattern = /^[5]\d{7}$/;
                var passLabel = "Phone Number";
                var requiredPhone = "Phone number must starts with 5 with a total of 8 digits."
                var strength = 'Weak';
                var pclass = 'danger';
                var number = $(this).val();
                if (pattern.test(number) == true) {
                    strength = 'Good';
                    pclass = 'success';
                }
                else {
                    strength = requiredPhone;
                    pclass = 'warning';
                    $('.register').su
                }

                var popover = phoneNumber.attr('data-content', strength).data('bs.popover');
                popover.setContent();
                popover.$tip.addClass(popover.options.placement).removeClass('danger success info warning primary').addClass(pclass);
            });

        })
    </script>
</head>
<body>
    <nav class="navbar navbar-default navbar-static-top">
        <div class="container-fluid">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a href="@Url.Action("LoginSupplier","Account")"><img id="Logo" class="navbar-brand" height="79" width="236" src="~/Content/Logo2.png" /></a>
            </div>
        </div>
    </nav>
    <div id="supplierLogin" class="col-md-offset-2 col-md-8 modal-content">
        <center class="jumbotron"><h3><b>Supplier Section</b></h3></center>
        <div class="divider"></div>
        <div class="col-md-10 col-md-offset-1">
            @using (Html.BeginForm("RegisterSupplier", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <center><h4>Create a new supplier account.</h4></center>
                <hr/>
                @Html.ValidationSummary("", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Name, new { @class = "col-md-3 control-label" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.FirstName, new { @class = "col-md-3 control-label" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.LastName, new { @class = "col-md-3 control-label" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-3 control-label" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-3 control-label" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", id = "PhoneNumber", @data_toggle = "popover", @title = "Phone number", @data_content = "Enter Phone Number..." })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Street, new { @class = "col-md-3 control-label" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.Street, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.City, new { @class = "col-md-3 control-label" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Website, new { @class = "col-md-3 control-label" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.Website, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-3 control-label" })
                    <div class="col-md-6">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "lowercase and uppercase letter and, special character", @id = "password", @data_toggle = "popover", @title = "Password Strength", @data_content = "Enter Password..." })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-3 control-label" })
                    <div class="col-md-6">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-10">
                        <input type="submit" class="btn btn-default" value="Register"/>
                    </div>
                </div>
            }
        </div>
    </div>
</body>
</html>