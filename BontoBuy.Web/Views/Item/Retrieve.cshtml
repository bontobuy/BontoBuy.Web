@using PagedList;
@using PagedList.Mvc;
@model IEnumerable<BontoBuy.Web.Models.ItemViewModel>

@{
    Layout = "~/Views/Shared/AdminLayout.cshtml";
    ViewBag.Title = "List Of Item";
}

<div class="col-md-9">
    <h2>@ViewBag.Title</h2>
    <p class="text-success">@ViewBag.StatusMessage</p>
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            @*<th>
                    @Html.DisplayNameFor(model => model.ItemProductViewModel.Description)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>

            <th></th>
        </tr>

        @foreach (var item in ViewBag.pageOfProducts)
        {
            <tr>
                @*<td>
                        @Html.DisplayFor(modelItem => item.ItemProductViewModel.Description)
                    </td>*@
                <td>
                    @item.Description
                </td>

                <td>
                    @Html.ActionLink("Edit", "Update", new { id = item.ItemId }) |
                    @Html.ActionLink("Details", "Get", new { id = item.ItemId }) |
                    @Html.ActionLink("Archive", "Archive", new { id = item.ItemId })
                </td>
            </tr>
        }
    </table>
    <div class="col-md-12">
        <div class="text-center">
            @Html.PagedListPager((IPagedList)ViewBag.pageOfProducts, page => Url.Action("Retrieve", new { page }))
            Showing @ViewBag.pageOfProducts.FirstItemOnPage to @ViewBag.pageOfProducts.LastItemOnPage of @ViewBag.pageOfProducts.TotalItemCount Items
        </div>
    </div>
</div>