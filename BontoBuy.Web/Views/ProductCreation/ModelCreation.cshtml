@model BontoBuy.Web.Models.SpecProductViewModel

@{
    Layout = "~/Views/Shared/SupplierLayout.cshtml";
    ViewBag.Title = "Model Creation";
}

<style type="text/css">
    .price-box {
        margin: 0 auto;
        background: #E9E9E9;
        border-radius: 10px;
        padding: 40px 15px;
        width: 500px;
    }

    .ui-widget-content {
        border: 1px solid #bdc3c7;
        background: #e1e1e1;
        color: #222222;
        margin-top: 4px;
    }

        .ui-state-default, .ui-widget-content .ui-state-default {
            background: #7f8c8d !important;
            border: 1px solid #222222 !important;
        }

    .ui-slider .ui-slider-handle label {
        background: #428bca;
        border-radius: 20px;
        width: 5.2em;
    }

    .ui-slider .ui-slider-handle {
        position: absolute;
        z-index: 2;
        width: 15px;
        height: 35px;
        cursor: default;
        /*margin: 0 -40px auto !important;*/
        text-align: center;
        line-height: 35px;
        color: #FFFFFF;
        font-size: 15px;
    }

        .ui-slider .ui-slider-handle .glyphicon {
            color: #FFFFFF;
            margin: 0 3px;
            font-size: 11px;
            opacity: 0.5;
        }

    .ui-corner-all {
        border-radius: 20px;
    }

    .ui-slider-horizontal .ui-slider-handle {
        top: -.9em;
    }

    .ui-state-default,
    .ui-widget-content .ui-state-default {
        border: 1px solid #f9f9f9;
        background: #3498db;
    }

    .ui-slider-horizontal .ui-slider-handle {
        margin-left: -0.5em;
    }

    .ui-slider .ui-slider-handle {
        cursor: pointer;
    }

    .ui-slider a,
    .ui-slider a:focus {
        cursor: pointer;
        outline: none;
    }

    .price, .lead p {
        font-weight: 600;
        font-size: 32px;
        display: inline-block;
        line-height: 60px;
    }

    h4.great {
        background: #00ac98;
        /*margin: 0 0 25px -60px;*/
        padding: 7px 15px;
        color: #ffffff;
        font-size: 18px;
        font-weight: 600;
        border-radius: 5px;
        display: inline-block;
        -moz-box-shadow: 2px 4px 5px 0 #ccc;
        -webkit-box-shadow: 2px 4px 5px 0 #ccc;
        box-shadow: 2px 4px 5px 0 #ccc;
    }

    .total {
        border-bottom: 1px solid #7f8c8d;
        /*display: inline;
    padding: 10px 5px;*/
        position: relative;
        padding-bottom: 20px;
    }

        .total:before {
            content: "";
            display: inline;
            position: absolute;
            left: 0;
            bottom: 5px;
            width: 100%;
            height: 3px;
            background: #7f8c8d;
            opacity: 0.5;
        }

    .price-slider {
        /*margin-bottom: 70px;*/
    }

        .price-slider span {
            font-weight: 200;
            display: inline-block;
            color: #7f8c8d;
            font-size: 13px;
        }

    .price-form {
        background: #ffffff;
        margin-bottom: 10px;
        padding: 20px;
        border: 1px solid #eeeeee;
        border-radius: 4px;
        /*-moz-box-shadow:    0 5px 5px 0 #ccc;
    -webkit-box-shadow: 0 5px 5px 0 #ccc;
    box-shadow:         0 5px 5px 0 #ccc;*/
    }

    .form-group {
        margin-bottom: 0;
    }

        .form-group span.price {
            font-weight: 200;
            display: inline-block;
            color: #7f8c8d;
            font-size: 14px;
        }

    .help-text {
        display: block;
        margin-top: 32px;
        margin-bottom: 10px;
        color: #737373;
        position: absolute;
        /*margin-left: 20px;*/
        font-weight: 200;
        text-align: right;
        width: 188px;
    }

    .price-form label {
        font-weight: 200;
        font-size: 21px;
    }

    img.payment {
        display: block;
        margin-left: auto;
        margin-right: auto;
    }

    .ui-slider-range-min {
        background: #2980b9;
    }

    /* HR */

    hr.style {
        margin-top: 0;
        border: 0;
        border-bottom: 1px dashed #ccc;
        background: #999;
    }
</style>
<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("ModelCreation", "ProductCreation", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Enter Details</h4>
        <hr/>
        <div class="form-group">
            @Html.Label("Image", new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                <input id="file-0a" name="modelPhoto" class="file" type="file" multiple data-min-file-count="1"/>
                @*<input type="file" name="modelPhoto" id="modelPhoto" style="width: 100%;" />*@ <br/>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ModelNumber, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.ModelNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModelNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BrandName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.BrandName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BrandName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", id = "PriceTextBox", min = 0, max = 100000 } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                <div id="priceSlider">
                    <div class="price-slider">
                        <h4 class="great">Price</h4><a href="#" id="priceManual" class="text-info">Want to enter the price? Click</a>
                        <div class="col-sm-12">
                            <div id="slider"></div>
                        </div>
                    </div>
                    <div class="price-form">
                        <div class="form-group">
                            <label for="amount" class="col-sm-6 control-label">Amount (Rs): </label>
                            <span class="help-text">Please choose your amount</span>
                            <div class="col-sm-6">
                                <input type="hidden" id="amount" class="form-control">
                                <p class="price lead" id="amount-label"></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NumberDaysToAdvert, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.NumberDaysToAdvert, new { htmlAttributes = new { @class = "form-control", min = 1 } })
                @Html.ValidationMessageFor(model => model.NumberDaysToAdvert, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryInDays, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.DeliveryInDays, new { htmlAttributes = new { @class = "form-control", @name = "Price", min = 1 } })
                @Html.ValidationMessageFor(model => model.DeliveryInDays, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-10">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </div>
    </div>
}
<div>
    <a href="@Url.Action("CategorySelection","ProductCreation")" class="Alert">Back</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $(window).on('beforeunload', function () {
            return "All data will be discarded if you go!";
        });

        $(document).ready(function () {
            $('.Alert').click(function (e) {
                e.preventDefault(5);
                var url = '@Url.Action("CategorySelection", "ProductCreation")';

                $.jAlert({
                    'title': 'Warning! You will have to start again from Category Selection!',
                    'closeOnClick': true,
                    'onClose': function (alert) {
                        window.location.href = url;
                    }
                });
            });

            $('#PriceTextBox').hide();

            $('#priceManual').click(function () {
                $('#PriceTextBox').fadeIn(1000);
                $('#priceSlider').fadeOut(1000);
            });

            $("#slider").slider({
                animate: true,
                value: 1,
                min: 0,
                max: 100000,
                step: 10,
                slide: function (event, ui) {
                    update(1, ui.value); //changed
                }
            });

            //Added, set initial value.
            $("#amount").val(0);
            $("#amount-label").text(0);

            update();
        });

        //changed. now with parameter
        function update(slider, val) {
            //changed. Now, directly take value from ui.value. if not set (initial, will use current value.)
            var $amount = slider == 1 ? val : $("#amount").val();
            var $duration = slider == 2 ? val : $("#duration").val();

            /* commented
            $amount = $( "#slider" ).slider( "value" );
            $duration = $( "#slider2" ).slider( "value" );
             */

            $total = "$" + ($amount * $duration);
            $("#amount").val($amount);
            $("#amount-label").text($amount);
            $("#duration").val($duration);
            $("#duration-label").text($duration);
            $("#total").val($total);
            $("#total-label").text($total);
            $('#PriceTextBox').val($amount);

            $('#slider a').html('<label><span class="glyphicon glyphicon-chevron-left"></span> ' + $amount + ' <span class="glyphicon glyphicon-chevron-right"></span></label>');
        }
    </script>

}

@*@model BontoBuy.Web.Models.SpecProductViewModel
    @{

        ViewBag.Title = "Create Model";
    }

    <h2>@ViewBag.Title</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Enter Details</h4>
            <hr/>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ModelNumber, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.ModelNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModelNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BrandName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.BrandName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BrandName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                Image<br/>
                <input type="file" name="file" id="file" style="width: 100%;" /> <br/>
            </div>
            <div class="form-group">
                <div class="col-md-offset-3 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default"/>
                </div>
            </div>
        </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@