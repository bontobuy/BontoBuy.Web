@model BontoBuy.Web.Models.SupplierUpdateOrderViewModel
@{
    Layout = "~/Views/Shared/SupplierLayout.cshtml";
    ViewBag.Title = "Edit Order: " + Model.OrderId;
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@ViewBag.Title</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OrderId)

        <div class="form-group">
            @Html.LabelFor(model => model.DtCreated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.DtCreated, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DtCreated, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpectedDeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.ExpectedDeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpectedDeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RealDeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.RealDeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RealDeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.OrderStatusId, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownList("OrderStatusId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OrderStatusId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GrandTotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.GrandTotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GrandTotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.Status == "Active")
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Processing" class="btn btn-default" />
                </div>
            </div>
        }
        @if (Model.Status == "Processing")
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="In Transit" class="btn btn-default" />
                </div>
            </div>
        }

        @if (Model.Status == "In Transit")
        {
            <hr />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-4">
                    Enter Confirmation Code received from Customer: <input type="text" required name="ConfirmationCode" class="form-control" /><br />
                    <input type="submit" value="Delivered" class="btn btn-info" />
                </div>
            </div>
        }
    </div>
}

<div>
    @Html.ActionLink("Back to List", "SupplierRetrieveOrders")
</div>